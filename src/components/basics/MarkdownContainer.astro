---
interface Props {
    class?: string;
}

const { class: className } = Astro.props;
---

<style>
	@reference "../../styles/global.css";

    .flag-markdown {
        & :global(h1), & :global(h2), & :global(h3), & :global(h4), & :global(h5), & :global(h6) {
            @apply items-center text-deepblue-7 dark:text-deepblue-0;
            scroll-margin-top: 2rem;
        }

        & :global(h1) {
            @apply text-3xl mb-3 font-bold;
        }
        & :global(h2) {
            @apply text-2xl mb-2 font-semibold;
        }
        & :global(h3) {
            @apply text-[18px] mb-1 font-semibold;
        }
        & :global(h4) {
            @apply text-sm font-semibold;
        }
        & :global(h5) {
            @apply text-xs font-semibold;
        }
        & :global(h6) {
            @apply text-xs font-semibold;
        }

        & :global(p) {
            @apply mb-4;

            &:last-child {
                @apply mb-0;
            }
        }

        & :global(strong), & :global(b) {
            @apply font-bold text-gravel-3;
        }

        & :global(a) {
            @apply text-starlane-primary dark:text-deepblue-3 transition-colors duration-200 hover:opacity-95;

            & :global(code) {
                @apply !text-inherit;
            }

            &:last-child {
                @apply mb-0;
            }
        }
    }
</style>

<markdown-container class:list={['flag-markdown block', className]}>
    <slot />
</markdown-container>

<script>
    class MarkdownContainer extends HTMLElement {
        connectedCallback() {
            const targets = this.querySelectorAll('.code-copy');
            for (const target of targets) {
                let code = target.parentElement?.querySelector('code');
                if (!code) {
                    target.remove();
                    continue;
                }

                const inner = code.querySelector('.code-container');
                if (inner) {
                    code = inner as HTMLElement;
                }

                target.addEventListener('click', () => {
                    navigator.clipboard.writeText(code.innerText);
                });
            }
        }
    }

    customElements.define('markdown-container', MarkdownContainer);
</script>
